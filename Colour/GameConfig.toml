metadata.config_version_wildcard = "*"

[game_setup]
roblox_version = '2018'

[game_setup.persistence]
sqlite_path = '_.sqlite'
clear_on_start = false

[server_core.metadata]
title = 'òó'
description = ''
creator_name = 'ÒÓ'
icon_uri = 'https://ia800506.us.archive.org/34/items/soundcloud-1509042007/1509042007.jpg'

[server_core.place_file]
rbxl_uri = '_.rbxl'
enable_saveplace = false

[remote_data.dev_products.1365914116]
name = 'Dev Product 1'
price = 2

[remote_data.dev_products.1365914117]
name = 'Dev Product 2'
price = 2

[remote_data.gamepasses.163231044]
name = 'Gamepass 1'
price = 1

[remote_data.gamepasses.119121530]
name = 'Gamepass 2'
price = 1

[remote_data.gamepasses.127744882]
name = 'Gamepass 3'
price = 1

[remote_data.gamepasses.127744510]
name = 'Gamepass 4'
price = 1

[remote_data.gamepasses.127744703]
name = 'Gamepass 5'
price = 1

[server_core]
startup_script = '''
_G.test_http = function(use_rbxapi)
    local url = "https://localhost:2005/test_http"
    print('testing', url, use_rbxapi)
    if use_rbxapi then
        game.HttpRbxApiService:GetAsyncFullUrl(url)
    else
        game.HttpService:GetAsync(url)
    end
end
local val = true
while wait(3) do
    print(pcall(function() _G.test_http(val) end))
    val = not val
end
'''

retrieve_default_user_code = '''
function(tick) -- float -> str
    return string.format('Player%d', tick)
end
'''

check_user_allowed = '''
function(user_iden, user_code) -- string -> bool
    return true
end
'''

check_user_has_admin = '''
function(user_iden, user_code) -- string -> bool
    return true
end
'''

retrieve_avatar = '''
function(user_iden, user_code)
    return {
        type = 'R15',
        items = {},
        colors = {
            head = BrickColor.Random().Number,
            left_arm = BrickColor.Random().Number,
            left_leg = BrickColor.Random().Number,
            right_arm = BrickColor.Random().Number,
            right_leg = BrickColor.Random().Number,
            torso = BrickColor.Random().Number,
        },
        scales = {
            height = 1,
            width = 1,
            head = 1,
            depth = 1,
            proportion = 1,
            body_type = 1,
        },
    }
end
'''

retrieve_username = '''
def f(user_id_num, user_code):
    return user_code
'''

filter_text = '''
def f(text, user_id_num, user_code):
    return (
        text
        .replace('oo','òó')
        .replace('OO','ÒÓ')
        .replace('ee','èé')
        .replace('EE','ÈÉ')
        .replace('Roblox','Rōblox')
        .replace('ROBLOX','RŌBLOX')
    )
'''

retrieve_groups = '''
def f(user_iden, user_code):
    return {
        '1200769': 255,
        '2868472': 255,
        '4199740': 255,
        '4265462': 255,
        '4265456': 255,
        '4265443': 255,
        '4265449': 255,
    }
'''

retrieve_default_funds = '''
def f(*a):
    return 6969
'''

chat_style = 'ClassicAndBubble'
