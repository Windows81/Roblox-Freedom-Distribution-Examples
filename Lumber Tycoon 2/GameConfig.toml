# EXAMPLE GAME CONFIGURATION FILE.
# PLEASE REVIEW AND MODIFY IF YOU WISH TO RUN YOUR OWN SERVERS!
# Some arguments are provided as absolute paths and only work on my machine.

metadata.config_version_wildcard = "*"

[game_setup]
# Aliases for "v348" is "2018M", "v463" is "2021E".
roblox_version = '2018M'

[game_setup.database]
sqlite_path = '_.sqlite'
clear_on_start = false

[server_core.place_file]
rbxl_uri = 'Lumber Tycoon 2.rbxl'
# When game:SavePlace() is called, overwrites the place at `.place_path`
enable_saveplace = false

[server_core.metadata]
title = 'Lumber Tycoon 2'
description = ''
creator.name = 'ÒÓ'
icon_uri = 'c:\Users\USERNAME\Pictures\Byfron Icon.png'

[server_core]
startup_script = 'game.workspace.FilteringEnabled = true'

retrieve_default_user_code = '''
def f(tick: float) -> str:
    return 'Player%d' % tick
'''

check_user_allowed = '''
def f(user_iden, user_code) -> bool:
    return True
'''

retrieve_avatar_type = '''
def f(user_iden, user_code) -> str:
    return 'R6'
'''

retrieve_avatar_items = '''
def f(user_iden, user_code):
    return []
'''

retrieve_avatar_colors = '''
def f(user_iden, user_code):
    return {
        "head": 315,
        "left_arm": 315,
        "left_leg": 315,
        "right_arm": 315,
        "right_leg": 315,
        "torso": 315,
    }
'''

retrieve_avatar_scales = '''
def f(user_id_num, user_code):
    return {
        "height": 1,
        "width": 1,
        "head": 1,
        "depth": 1,
        "proportion": 0,
        "body_type": 0,
    }
'''

retrieve_username = '''
def f(user_id_num, user_code):
    return user_code
'''

retrieve_user_id = '''
import random
def f(user_code) -> int:
    return random.randint(1, 16777216)
'''

retrieve_account_age = '''
def f(*a):
    return 6969
'''

filter_text = '''
def f(text, user_id_num, user_code):
    return (
        text
        .replace('oo','òó')
        .replace('OO','ÒÓ')
        .replace('ee','èé')
        .replace('EE','ÈÉ')
        .replace('Roblox','Rōblox')
        .replace('ROBLOX','RŌBLOX')
    )
'''

chat_style = 'ClassicAndBubble'


[remote_data]
asset_redirects_call_mode = 'python'
asset_redirects = '''
import requests
redirs = requests.get('https://ia800509.us.archive.org/5/items/roblox-asset-hash-archive/asset_dump_merged.json').json()
def f(asset_iden):
    asset_iden = str(asset_iden)
    if asset_iden in redirs:
        return {
            'raw_data': requests.get(redirs[asset_iden]).content,
        }
'''
