EL && __DEFAULT_AEABI_PORTABILITY_LEVEL != 0)

extern void __aeabi_SIG_DFL(int);
#define SIG_DFL (__CLIBNS __aeabi_SIG_DFL)
extern void __aeabi_SIG_ERR(int);
#define SIG_ERR (__CLIBNS __aeabi_SIG_ERR)
extern void __aeabi_SIG_IGN(int);
#define SIG_IGN (__CLIBNS __aeabi_SIG_IGN)

extern const int __aeabi_SIGABRT;
#define SIGABRT (__CLIBNS __aeabi_SIGABRT)
extern const int __aeabi_SIGFPE;
#define SIGFPE (__CLIBNS __aeabi_SIGFPE)
extern const int __aeabi_SIGILL;
#define SIGILL (__CLIBNS __aeabi_SIGILL)
extern const int __aeabi_SIGINT;
#define SIGINT (__CLIBNS __aeabi_SIGINT)
extern const int __aeabi_SIGSEGV;
#define SIGSEGV (__CLIBNS __aeabi_SIGSEGV)
extern const int __aeabi_SIGTERM;
#define SIGTERM (__CLIBNS __aeabi_SIGTERM)

#else

   /*
    * Each of the following macros expand to a constant expression with a
    * distinct value and has the same type as the second argument to, and the
    * return value of the signal function, and whose value compares unequal to
    * the address of any declarable function.  Use a typedef to ensure that
    * the function pointer type is extern "C".
    */
typedef void(*__ARM_sigh_t)(int);
#define SIG_DFL ( (__CLIBNS __ARM_sigh_t) -1 )
#define SIG_ERR ( (__CLIBNS __ARM_sigh_t) -2 )
#define SIG_IGN ( (__CLIBNS __ARM_sigh_t) -3 )

   /*
    * Each of the following macros expand to a positive integral constant
    * expression that is the signal number corresponding the the specified
    * condition.
    */
#define SIGABRT   1 /* abort                         */
#define SIGFPE    